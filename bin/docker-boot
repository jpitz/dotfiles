#!/usr/bin/env ruby
require 'yaml'

current_dir=Dir.pwd
this_dir=__dir__

if ARGV.length < 2 and File.file?("#{current_dir}/docker-boot.db") then
    handle=File.open("#{current_dir}/docker-boot.db").read
    handle.each_line do |line|
        if line.chomp!.length > 0 then
            system("docker-boot-2 #{line}")
        end
    end
elsif ARGV.length < 2 then
    puts "usage: docker-boot-2 <image> <name> [targetDir]"  
    SystemExit.new(1)
else
    DOCKER_IMAGE_NAME=ARGV[0]
    DOCKER_BOOT_NAME=ARGV[1]

    if ARGV.length > 2 then
        DOCKER_BOOT_TARGET_DIR=File.absolute_path(ARGV[2])
    else
        DOCKER_BOOT_TARGET_DIR=current_dir
    end

    DOCKER_CONSUL_IP=`docker-dns-ip`

    VARIABLES={
        "DOCKER_IMAGE_NAME" => DOCKER_IMAGE_NAME,
        "DOCKER_BOOT_NAME" => DOCKER_BOOT_NAME,
        "DOCKER_BOOT_TARGET_DIR" => DOCKER_BOOT_TARGET_DIR,
        "DOCKER_CONSUL_IP" => DOCKER_CONSUL_IP
    }

    VARIABLES.each do |key, value|
        puts key + '=' + value
    end
    
    base=YAML::load_file("#{this_dir}/docker-compose.yml", Hash.new)

    managed=YAML::load_file("#{this_dir}/docker-compose-managed.yml", Hash.new)
    managed[DOCKER_BOOT_NAME] = base[DOCKER_IMAGE_NAME];

    File.open("#{this_dir}/docker-compose-managed.yml", "w+") do |f|
        f.write(managed.to_yaml)
    end

    system("docker stop #{DOCKER_BOOT_NAME} | xargs docker rm &>/dev/null")

    COMMAND=[
        "docker-compose",
        "-f #{this_dir}/docker-compose.yml",
        "-f #{this_dir}/docker-compose-managed.yml",
        "up",
        "-d",
        "#{DOCKER_BOOT_NAME}"
    ]

    system(VARIABLES, COMMAND.join(' '))
    system("docker-dns-register #{DOCKER_BOOT_NAME}")
end
